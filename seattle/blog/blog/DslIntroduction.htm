I am writing a series of posts to help me prepare for my talk at <a href="http://www.sellsbrothers.com/conference/" target="_blank">Dsl DevCon</a>.

I am blogging what my talk will consist of at <a href="http://www.sellsbrothers.com/conference/" target="_blank">Dsl DevCon</a>.

You can read a series of introductions to the projects which can be found <a href="http://thesoftwaresimpleton.blogspot.com/2009/03/horn-package-management-system.html" target="_blank">here</a>, <a href="http://thesoftwaresimpleton.blogspot.com/2009/03/horn-dsl.html" target="_blank">here</a> and <a href="http://thesoftwaresimpleton.blogspot.com/2009/03/horn-architecure-overview.html" target="_blank">here</a>.

First up, begs the question who am I?  Compared to most of the speakers at the conference, I am putting myself forward as the devloper in the field.  If any of you are familiar with the "hitch hiker's guide to the galaxy", I am the developer who would get evaporated by the <a href="http://fscked.org/writings/TotalPerspectiveVortex/" target="_blank">total perspective vortex</a> if he actually seen himself positioned iin his rightful place in the developer ecosystem.  

I do not really have much call or need to express the complex nature of the business rules for the type of application I work on in a DSL.  The domain at hand is just not rich enough to be expressed in the gushing terms of Eric Evan's DDD, never mind warranting the time to create a semi English prose that will help us to unearth new models in our problem space.  In fact having just started my own business, such time spent on a flight of fancy like this would hurt me where it hurts most, in the pocket.  That said I am a passionate developer, I do want to work on such projects but this is where I currently am.

I have been very active in the <a href="http://code.google.com/p/scotaltdotnet/" target="_blank">horn</a> package management open source project.  I can safely say without any worry of offending anyone that the majority of the code has been written by yours truly.  Horn development was moving at a reasonable pace considering the available manpower.  That is until I submitted a talk to <a href="http://www.sellsbrothers.com/conference/" target="_blank">Dsl DevCon</a> which was accepted.  After my initial euphoria 

The horn package manager has set out to ease the pain of building open source projects and their dependencies.  We are trying to plug a hole in the market that has been so adequately plugged in ruby by <a target="_blank" href="http://rubygems.org/">rubygems</a>, <a href="http://maven.apache.org/" target="_blank">maven</a> for in and <a href="http://www.app-get.com/whatisappget/" target="_blank">appget</a>.  We want to simply be able to type in a command such as <strong>horn -install:nhibernate</strong> and horn will take care of retrieving the nhibernate source from their subversion repository and building the source with the build tool of your choice or more likely, the build tool of the vendor's choice.  

Our target audience is that of developers who like to live on the trunk or as we like to romantically think of it, <strong>the bleeding edge</strong>.  The bleeding edge in this context is what is known as <i>"working off the trunk"</i>.  My current stack of open source projects that I use to help me with my daily software development asks include such open source parts as:



An intregal part of the horn metaphor is the package description DSL.  The horn DSL contains all the data needed to build a typical component.  

Horn is tasked with not only building the dependencies but 



